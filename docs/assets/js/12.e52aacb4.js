(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{378:function(e,t,o){e.exports=o.p+"assets/img/tui-ec-expose-ports.6c7bebc3.png"},379:function(e,t,o){e.exports=o.p+"assets/img/tui-cc-expose-ports.8709831e.png"},483:function(e,t,o){e.exports=o.p+"assets/img/tui-fallback-ok.bb7d96bf.png"},484:function(e,t,o){e.exports=o.p+"assets/img/tui-fallback-disabled.6a084a86.png"},485:function(e,t,o){e.exports=o.p+"assets/img/tui-fallback-clients.b217145e.png"},625:function(e,t,o){"use strict";o.r(t);var n=o(13),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"specifying-a-fallback-node"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#specifying-a-fallback-node"}},[e._v("#")]),e._v(" Specifying a Fallback Node")]),e._v(" "),n("p",[e._v("Starting with "),n("strong",[e._v("1.5.0")]),e._v(' of the Smartnode stack, you can provide a "fallback" Execution client and Consensus client pair that can take over for your primary clients if they ever go offline (such as because '),n("RouterLink",{attrs:{to:"/guides/node/pruning.html"}},[e._v("you use Geth and need to prune it")]),e._v(").\nIn this situation, your primary node machine will still be responsible for attesting and proposing blocks with your minipools' validator keys, but it will connect to an external machine to interact with the Execution layer and Beacon chains.")],1),e._v(" "),n("p",[e._v("Essentially, it allows you to "),n("em",[e._v("temporarily")]),e._v(" use another pair of clients for things like querying the chains, sending transactions, and receiving blocks to attest to.\nThis pair can be externally managed (like Hybrid mode), or it can be another Rocket Pool node (another Docker mode machine that has the API ports exposed, which we'll cover below).")]),e._v(" "),n("p",[e._v("Once your node's primary clients are back online, the Smartnode and your Validator client will switch back to them automatically.")]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),n("p",[e._v("A fallback node is "),n("strong",[e._v("not")]),e._v(' the same as a "backup" node.\nFallback nodes have an Execution and Consensus client pair synced to the chain and running, but they '),n("strong",[e._v("do not")]),e._v(" have your node's wallet or its validator keys loaded.")]),e._v(" "),n("p",[e._v("If your main node ever goes offline, "),n("strong",[e._v("your fallback will not start validating for you.")])])]),e._v(" "),n("h2",{attrs:{id:"supported-clients"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#supported-clients"}},[e._v("#")]),e._v(" Supported Clients")]),e._v(" "),n("p",[e._v("Not all clients are capable of supporting fallback nodes.\nThe "),n("code",[e._v("rocketpool service config")]),e._v(" TUI will show you whether your client selection supports it or not in the description box when you hover over the "),n("code",[e._v("Fallback Clients")]),e._v(" page.")]),e._v(" "),n("p",[e._v("If your client supports it, you will see a description like this:")]),e._v(" "),n("center",[n("p",[n("img",{attrs:{src:o(483),alt:""}})])]),e._v(" "),n("p",[e._v("If your client does not support it, you will see a description like this and you will be unable to press "),n("code",[e._v("Enter")]),e._v(" to enter the settings page:")]),e._v(" "),n("center",[n("p",[n("img",{attrs:{src:o(484),alt:""}})])]),e._v(" "),n("p",[e._v("At the time of v1.5.0's release, the following Validator clients have Fallback client support:")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Name")]),e._v(" "),n("th",[e._v("Supports Fallback")]),e._v(" "),n("th",[e._v("Valid Fallback Clients")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("Lighthouse")]),e._v(" "),n("td",[e._v("Yes")]),e._v(" "),n("td",[e._v("Any (doppelganger protection off)"),n("br"),e._v("Lighthouse (doppelganger protection on)")])]),e._v(" "),n("tr",[n("td",[e._v("Nimbus")]),e._v(" "),n("td",[e._v("No")]),e._v(" "),n("td")]),e._v(" "),n("tr",[n("td",[e._v("Prysm")]),e._v(" "),n("td",[e._v("Yes")]),e._v(" "),n("td",[e._v("Prysm")])]),e._v(" "),n("tr",[n("td",[e._v("Teku")]),e._v(" "),n("td",[e._v("Yes")]),e._v(" "),n("td",[e._v("Any")])])])]),e._v(" "),n("p",[e._v("If Fallback support is critical for you and your current Consensus client selection does not offer it, you may want to consider using a different Consensus client.\nLuckily, "),n("RouterLink",{attrs:{to:"/guides/node/change-clients.html#changing-consensus-clients"}},[e._v("switching clients is very easy with the Smartnode")]),e._v(".")],1),e._v(" "),n("h2",{attrs:{id:"setting-up-a-new-node-docker-mode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-new-node-docker-mode"}},[e._v("#")]),e._v(" Setting up a New Node (Docker Mode)")]),e._v(" "),n("p",[e._v("You can use a 2nd machine that you own locally, a remote node hosted on a VPS, or a cloud-based node as a fallback node.")]),e._v(" "),n("p",[e._v("This example shows you how to create a 2nd Smartnode on a different machine using Docker mode, which can serve as a fallback node.")]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),n("p",[e._v("If you already have a 2nd node ready and have its RPC ports exposed, feel free to skip this section.")])]),e._v(" "),n("ol",[n("li",[n("p",[e._v("Follow the steps in the guide on setting up a node ("),n("RouterLink",{attrs:{to:"/guides/node/local/hardware.html"}},[e._v("local")]),e._v(" or "),n("RouterLink",{attrs:{to:"/guides/node/vps/providers.html"}},[e._v("remote")]),e._v(").")],1)]),e._v(" "),n("li",[n("p",[e._v("Once the machine is ready, "),n("RouterLink",{attrs:{to:"/guides/node/docker.html"}},[e._v("install the Smartnode stack")]),e._v(".")],1)]),e._v(" "),n("li",[n("p",[e._v("Run "),n("code",[e._v("rocketpool service config")]),e._v(" to specify which clients you'd like to use.")]),e._v(" "),n("ol",[n("li",[e._v("When you get to the end of the wizard and it asks if you'd like to review your settings, select "),n("strong",[e._v("Yes")]),e._v(".")]),e._v(" "),n("li",[e._v("Enter the "),n("code",[e._v("Execution Client")]),e._v(" settings.")]),e._v(" "),n("li",[e._v("Check the "),n("code",[e._v("Expose RPC Ports")]),e._v(" box:")])]),e._v(" "),n("center",[n("p",[n("img",{attrs:{src:o(378),alt:""}})])]),e._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[e._v("Go back and enter the "),n("code",[e._v("Consensus Client")]),e._v(" settings.")]),e._v(" "),n("li",[e._v("Check the "),n("code",[e._v("Expose API Port")]),e._v(" box (and, if you're using "),n("strong",[e._v("Prysm")]),e._v(", the "),n("code",[e._v("Expose RPC Port")]),e._v(" box as well):")])]),e._v(" "),n("center",[n("p",[n("img",{attrs:{src:o(379),alt:""}})])]),e._v(" "),n("ol",{attrs:{start:"6"}},[n("li",[e._v("Save the settings and start the Smartnode.")])])],1),e._v(" "),n("li",[n("p",[e._v("Skip to the "),n("RouterLink",{attrs:{to:"/guides/node/securing-your-node.html"}},[e._v("Securing your Node")]),e._v(" guide to set up SSH and the proper security posture on it.")],1),e._v(" "),n("ol",[n("li",[e._v("If you have "),n("code",[e._v("ufw")]),e._v(" installed, you will need to add rules to allow incoming traffic to the API ports ("),n("code",[e._v("8545")]),e._v(", "),n("code",[e._v("8546")]),e._v(", and "),n("code",[e._v("5052")]),e._v(" by default; also "),n("code",[e._v("5053")]),e._v(" if you're using "),n("strong",[e._v("Prysm")]),e._v(").")])])]),e._v(" "),n("li",[n("p",[e._v("That's it! You can stop here.")])])]),e._v(" "),n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),n("p",[n("strong",[e._v("Do not")]),e._v(" create a wallet with "),n("code",[e._v("rocketpool wallet init")]),e._v(" or recover your old wallet.\nLeave this node without a wallet and without validator keys.")]),e._v(" "),n("p",[e._v("Its only job is to have a synced Execution client and Consensus client.")])]),e._v(" "),n("h2",{attrs:{id:"connecting-your-main-node-to-the-fallback-node"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#connecting-your-main-node-to-the-fallback-node"}},[e._v("#")]),e._v(" Connecting your Main Node to the Fallback Node")]),e._v(" "),n("p",[e._v("Once you have a fallback node prepared, you can connect it to your main node.")]),e._v(" "),n("ol",[n("li",[e._v("Enter the "),n("code",[e._v("rocketpool service config")]),e._v(" TUI and enter the "),n("code",[e._v("Fallback Clients")]),e._v(" settings.")]),e._v(" "),n("li",[e._v("Check the "),n("code",[e._v("Use Fallback Clients")]),e._v(" box.")]),e._v(" "),n("li",[e._v("Enter the RPC URL for your Execution client in the "),n("code",[e._v("Execution Client URL")]),e._v(" box. For example, if your fallback node's IP address is "),n("code",[e._v("192.168.1.45")]),e._v(" and you have its Execution client on the default port of "),n("code",[e._v("8545")]),e._v(", you would enter "),n("code",[e._v("http://192.168.1.45:8545")]),e._v(" here.")]),e._v(" "),n("li",[e._v("Do the same for the RPC URL of your fallback Consensus client. Following the same example, if you have it on the default port of "),n("code",[e._v("5052")]),e._v(", you would enter "),n("code",[e._v("http://192.168.1.45:5052")]),e._v(" here.")])]),e._v(" "),n("p",[e._v("The final page should look like this:")]),e._v(" "),n("center",[n("p",[n("img",{attrs:{src:o(485),alt:""}})])]),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),n("p",[n("strong",[e._v("Native mode")]),e._v(" users can follow the same steps, though the TUI will look slightly different from the above screenshot.")]),e._v(" "),n("p",[e._v("Note that this will only provide the "),n("strong",[e._v("Smartnode itself")]),e._v(" (the daemon service) with fallback support; "),n("strong",[e._v("you will have to update your Validator client service's arguments manually to give it access to the fallback clients.")])])]),e._v(" "),n("p",[e._v("Press "),n("code",[e._v("enter")]),e._v(" on the final box to ensure that it's confirmed, then save the settings and apply the changes.")]),e._v(" "),n("p",[e._v("Once they've been applied, you can confirm the availability of your fallback node using the "),n("code",[e._v("rocketpool node sync")]),e._v(" command:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Your Smartnode is currently using the Ethereum Mainnet.\n\nYour eth2 client is on the correct network.\n\nYour primary execution client is fully synced.\nYour fallback execution client is fully synced.\nYour primary consensus client is fully synced.\nYour fallback consensus client is fully synced.\n")])])]),n("p",[e._v("If it shows that both the fallback Execution and Consensus client are synced, then you're all set!")]),e._v(" "),n("h2",{attrs:{id:"testing-the-fallback-clients"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#testing-the-fallback-clients"}},[e._v("#")]),e._v(" Testing the Fallback Clients")]),e._v(" "),n("p",[e._v("If you'd like to be absolutely sure that your configuration is going to work by testing the fallback clients, simply stop the Execution and Consensus clients on your main node:")]),e._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stop rocketpool_eth1 rocketpool_eth2\n")])])]),n("p",[e._v("Then run any command that queries the chain, such as  "),n("code",[e._v("rocketpool network stats")]),e._v(".\nYou will see a warning message at the top indicating that one (or both) of your primary clients are offline, and that it's reverting to the fallback clients:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('NOTE: primary clients are not ready, using fallback clients...\n\tPrimary EC status: unavailable (Sync progress check failed with [Post "http://eth1:8545": dial tcp: lookup eth1 on 127.0.0.11:53: no such host])\n\tPrimary CC status: synced and ready\n\n========== General Stats ==========\nTotal Value Locked:      278978.009858 ETH\nStaking Pool Balance:    10.587295 ETH\nMinipool Queue Demand:   3360.000000 ETH\nStaking Pool ETH Used:   99.735490%\n\n============== Nodes ==============\nCurrent Commission Rate: 15.000000%\nNode Count:              1325\nActive Minipools:        6409\n    Initialized:         175\n    Prelaunch:           3\n    Staking:             6227\n    Withdrawable:        0\n    Dissolved:           4\nInactive Minipools:      0\n\n========== Smoothing Pool =========\nNodes Opted in:          0\nPending Balance:         0.000000\n\n============== Tokens =============\nrETH Price (ETH / rETH): 1.031919 ETH\nRPL Price (ETH / RPL):   0.011563 ETH\nTotal RPL staked:        6098920.170527 RPL\nEffective RPL staked:    5751692.043848 RPL\n')])])]),n("p",[e._v("Finally, start your primary clients again:")]),e._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" start rocketpool_eth1 rocketpool_eth2\n")])])]),n("p",[e._v("And you're done!\nYour fallback setup is working.")]),e._v(" "),n("h2",{attrs:{id:"next-steps"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next Steps")]),e._v(" "),n("p",[e._v("Whether or not you've opted into creating and/or running a fallback node for your setup, the next step is to learn about "),n("strong",[e._v("priority fees")]),e._v(".\nClick on the next section of the guide when you're ready to proceed.")])],1)}),[],!1,null,null,null);t.default=a.exports}}]);