(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{653:function(e,o,t){"use strict";t.r(o);var a=t(13),s=Object(a.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"oracle-dao-proposals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#oracle-dao-proposals"}},[e._v("#")]),e._v(" Oracle DAO Proposals")]),e._v(" "),t("p",[e._v("As a reminder, there are two types of Oracle DAO duties:")]),e._v(" "),t("ol",[t("li",[t("p",[t("strong",[e._v("Automated duties")]),e._v(" - these are duties related to routine Rocket Pool operation, such as shuttling information from the Consensus Layer to the Execution Layer, calculating various aspects of the protocol off-chain, and submitting them as updates to the Smart Contracts. Each of these is performed automatically by the "),t("code",[e._v("watchtower")]),e._v(" daemon process and do not require manual intervention so long as your Execution and Consensus Clients, and your "),t("code",[e._v("watchtower")]),e._v(" daemon, are all operating normally. You set up the "),t("code",[e._v("watchtower")]),e._v(" daemon in the previous steps already, so this section will not go over them again.")])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("Manual duties")]),e._v(" - these are duties that require your own decision making and out-of-band communication with the rest of the Oracle DAO to perform. They include things such as voting on contract upgrades, changing parameters, and inviting or kicking members to/from the Oracle DAO. These can all be done via the standard Smartnode CLI. This section describes each of these duties and how to perform them.")])])]),e._v(" "),t("p",[e._v("Proposals form the core of your responsibities outside of the automated "),t("code",[e._v("watchtower")]),e._v(" duties.\nEssentially, they work as follows:")]),e._v(" "),t("ul",[t("li",[e._v("The collective Oracle DAO should discuss an upcoming proposal extensively ahead of time, so each member is aware of it and understands what that proposal will entail.")]),e._v(" "),t("li",[e._v("An Oracle DAO member then creates the proposal via an on-chain transaction.")]),e._v(" "),t("li",[e._v("The proposal will then enter a "),t("strong",[e._v("wait period")]),e._v(" before voting can begin to have further discussion and form their opinion on it. This is currently "),t("strong",[e._v("7 days")]),e._v(" on Mainnet.")]),e._v(" "),t("li",[e._v("After the wait period is over, members can vote on the proposal via a simple yes-or-no vote.")]),e._v(" "),t("li",[e._v("When a quorum of 51% of the Oracle DAO members has voted the same way, the vote is concluded. If 51% agreed to the proposal, it will be able to be "),t("strong",[e._v("executed")]),e._v(". Any member can execute the proposal once it is approved.")]),e._v(" "),t("li",[e._v("Execution refers to formally triggering the change on-chain, thus modifying the state of the core Rocket Pool contracts.")])]),e._v(" "),t("h2",{attrs:{id:"making-a-proposal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#making-a-proposal"}},[e._v("#")]),e._v(" Making a Proposal")]),e._v(" "),t("p",[e._v("Once you make a proposal, it will enter a "),t("strong",[e._v("review period")]),e._v(" where the other members can see it and discuss it, but will not be able to vote on it.\nAt the time of writing, this is currently "),t("strong",[e._v("7 days")]),e._v(".")]),e._v(" "),t("p",[e._v("After the review period, there will be a "),t("strong",[e._v("voting period")]),e._v(" where members can vote either for the proposal, or against it.\nAt the time of writing, this is currently "),t("strong",[e._v("14 days")]),e._v(".")]),e._v(" "),t("p",[e._v("If the proposal reaches quorum before it expires (that is, if enough members vote in favor of it to reach consensus), it will be "),t("strong",[e._v("passed")]),e._v(".\nQuorum is a configurable parameter by the Oracle DAO; it is currently set to at least "),t("strong",[e._v("51%")]),e._v(" of the total member pool.")]),e._v(" "),t("p",[e._v("Once a vote is passed, it can be "),t("strong",[e._v("executed")]),e._v(" which causes its changes to go into effect.\nAt the time of writing, the execution is "),t("strong",[e._v("14 days")]),e._v(" after the proposal was passed.")]),e._v(" "),t("p",[e._v("The process for making a new proposal depends on the type of proposal you want to make.\nSelect a type from the tabs below.")]),e._v(" "),t("Tabs",{attrs:{type:"border-card"}},[t("Tab",{attrs:{label:"Oracle DAO Member List"}},[t("p",[e._v("To propose modifying the list of Oracle DAO members, use the "),t("code",[e._v("rocketpool odao propose member")]),e._v(" command which provides the following options:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("NAME:\n   rocketpool odao propose member - Make an oracle DAO member proposal\n\nUSAGE:\n   rocketpool odao propose member command [command options] [arguments...]\n\nCOMMANDS:\n   invite, i  Propose inviting a new member\n   leave, l   Propose leaving the oracle DAO\n   kick, k    Propose kicking a member\n\nOPTIONS:\n   --help, -h  show help\n")])])]),t("h4",{attrs:{id:"invite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#invite"}},[e._v("#")]),e._v(" invite")]),e._v(" "),t("p",[e._v("Inviting a member is done via "),t("code",[e._v("rocketpool odao propose member invite")]),e._v(" which will take 3 additional arguments:")]),e._v(" "),t("ul",[t("li",[e._v("The node address to invite (must be a registered Rocket Pool node)")]),e._v(" "),t("li",[e._v("The name / label for this node")]),e._v(" "),t("li",[e._v("The URL or contact info for the user or organization running the node")])]),e._v(" "),t("p",[e._v("For example: to invite a new member, run "),t("code",[e._v("rocketpool odao propose member invite 0xabcd1234abcd1234abcd1234abcd1234abcd1234 some-user user@example.com")]),e._v(".")]),e._v(" "),t("h4",{attrs:{id:"kick"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kick"}},[e._v("#")]),e._v(" kick")]),e._v(" "),t("p",[e._v("Kicking a member out of the Oracle DAO is done via the "),t("code",[e._v("rocketpool odao propose member kick")]),e._v(" command.\nIt will ask you to select which member you want to kick, and issue an optional fine (from 0 RPL up to the bonded RPL amount, currently 1750 RPL).\nThis fine, if provided, will burn part of (or all of) the member's RPL bond if the Oracle DAO votes to kick that member.")]),e._v(" "),t("h4",{attrs:{id:"leave"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#leave"}},[e._v("#")]),e._v(" leave")]),e._v(" "),t("p",[e._v("If you would like to voluntarily resign from the Oracle DAO, use the "),t("code",[e._v("rocketpool odao propose member leave")]),e._v(" command.\nThis will create a new proposal so the other members can vote on whether or not to approve your resignation.")])]),e._v(" "),t("Tab",{attrs:{label:"Oracle DAO Parameters"}},[t("p",[e._v("To propose modifying the parameters that govern how Oracle DAO votes and membership modification work, use the "),t("code",[e._v("rocketpool odao propose setting")]),e._v(" command which provides the following options:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("NAME:\n   rocketpool odao propose setting - Make an oracle DAO setting proposal\n\nUSAGE:\n   rocketpool odao propose setting command [command options] [arguments...]\n\nCOMMANDS:\n   members-quorum, q                 Propose updating the members.quorum setting - takes a percent, from 0 to 100\n   members-rplbond, b                Propose updating the members.rplbond setting - takes an RPL amount (e.g. 5000)\n   proposal-cooldown, c              Propose updating the proposal.cooldown.time setting - format is e.g. 1h30m45s\n   proposal-vote-timespan, v         Propose updating the proposal.vote.time setting - format is e.g. 1h30m45s\n   proposal-vote-delay-timespan, d   Propose updating the proposal.vote.delay.time setting - format is e.g. 1h30m45s\n   proposal-execute-timespan, x      Propose updating the proposal.execute.time setting - format is e.g. 1h30m45s\n   proposal-action-timespan, a       Propose updating the proposal.action.time setting - format is e.g. 1h30m45s\n   scrub-period, s                   Propose updating the minipool.scrub.period setting - format is e.g. 1h30m45s\n\nOPTIONS:\n   --help, -h  show help\n")])])]),t("h4",{attrs:{id:"members-quorum"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#members-quorum"}},[e._v("#")]),e._v(" members-quorum")]),e._v(" "),t("p",[e._v("Using "),t("code",[e._v("rocketpool odao propose setting members-quorum <value>")]),e._v(" will change the quorum required for the Oracle DAO's duties before they are considered canonized.\n"),t("code",[e._v("<value>")]),e._v(" here can be a floating point number between 0 and 100, indicating the percent of members needed to reach quorum on Oracle DAO votes.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("Note that this does "),t("strong",[e._v("not")]),e._v(" affect the quorum required for automated duties such as RPL price and rETH balance submission; those settings are controlled by the Protocol DAO (pDAO), "),t("em",[e._v("not")]),e._v(" the Oracle DAO.")])]),e._v(" "),t("h4",{attrs:{id:"members-rplbond"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#members-rplbond"}},[e._v("#")]),e._v(" members-rplbond")]),e._v(" "),t("p",[e._v("Use "),t("code",[e._v("rocketpool odao propose setting members-rplbond <value>")]),e._v(" to change the amount of RPL required as a bond for new members invited to the Oracle DAO.\nFor example, entering "),t("code",[e._v("5000")]),e._v(" for "),t("code",[e._v("<value>")]),e._v(" will set the bond at 5000 RPL.\nNote that this does not affect members that already exist; it only affects new members invited after the change.")]),e._v(" "),t("h4",{attrs:{id:"proposal-cooldown"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proposal-cooldown"}},[e._v("#")]),e._v(" proposal-cooldown")]),e._v(" "),t("p",[e._v("Use "),t("code",[e._v("rocketpool odao propose setting proposal-cooldown <value>")]),e._v(" to change the cooldown time that a member must wait between submitting proposals.")]),e._v(" "),t("p",[t("code",[e._v("<value>")]),e._v(" is a string-formatted time duration, such as "),t("code",[e._v("1h30m45s")]),e._v(" for one hour, thirty minutes, and forty-five seconds.\nIt does not accept days; for multiple days, simply use the total number of hours.")]),e._v(" "),t("h4",{attrs:{id:"proposal-vote-timespan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proposal-vote-timespan"}},[e._v("#")]),e._v(" proposal-vote-timespan")]),e._v(" "),t("p",[e._v("Use "),t("code",[e._v("rocketpool odao propose setting proposal-vote-timespan <value>")]),e._v(" to change how long a vote can exist before expiring.")]),e._v(" "),t("p",[t("code",[e._v("<value>")]),e._v(" is a string-formatted time duration, such as "),t("code",[e._v("1h30m45s")]),e._v(" for one hour, thirty minutes, and forty-five seconds.\nIt does not accept days; for multiple days, simply use the total number of hours.")]),e._v(" "),t("h4",{attrs:{id:"proposal-vote-delay-timespan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proposal-vote-delay-timespan"}},[e._v("#")]),e._v(" proposal-vote-delay-timespan")]),e._v(" "),t("p",[e._v("Use "),t("code",[e._v("rocketpool odao propose setting proposal-vote-delay-timespan <value>")]),e._v(" to change how long the Oracle DAO must wait before being able to vote on a new proposal.")]),e._v(" "),t("p",[t("code",[e._v("<value>")]),e._v(" is a string-formatted time duration, such as "),t("code",[e._v("1h30m45s")]),e._v(" for one hour, thirty minutes, and forty-five seconds.\nIt does not accept days; for multiple days, simply use the total number of hours.")]),e._v(" "),t("h4",{attrs:{id:"proposal-execute-timespan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proposal-execute-timespan"}},[e._v("#")]),e._v(" proposal-execute-timespan")]),e._v(" "),t("p",[e._v("Use "),t("code",[e._v("rocketpool odao propose setting proposal-execute-timespan <value>")]),e._v(" to change how long the Oracle DAO has to execute (enact) a proposal after it is approved.\nIf none of the members execute the proposal during this window, it will expire and the proposal will become invalid.")]),e._v(" "),t("p",[t("code",[e._v("<value>")]),e._v(" is a string-formatted time duration, such as "),t("code",[e._v("1h30m45s")]),e._v(" for one hour, thirty minutes, and forty-five seconds.\nIt does not accept days; for multiple days, simply use the total number of hours.")]),e._v(" "),t("h4",{attrs:{id:"proposal-action-timespan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proposal-action-timespan"}},[e._v("#")]),e._v(" proposal-action-timespan")]),e._v(" "),t("p",[e._v("Certain proposals require secondary actions after being executed for them to finish taking effect (such as inviting a member to join, then them actually joining).\nUse "),t("code",[e._v("rocketpool odao propose setting proposal-action-timespan <value>")]),e._v(" to change how long this secondary action is able to be run after the proposal is executed.\nThe user will be unable to take this action "),t("em",[e._v("after")]),e._v(" this window; if the action isn't taken in time, the proposal is essentially invalid.")]),e._v(" "),t("p",[t("code",[e._v("<value>")]),e._v(" is a string-formatted time duration, such as "),t("code",[e._v("1h30m45s")]),e._v(" for one hour, thirty minutes, and forty-five seconds.\nIt does not accept days; for multiple days, simply use the total number of hours.")]),e._v(" "),t("h4",{attrs:{id:"scrub-period"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#scrub-period"}},[e._v("#")]),e._v(" scrub-period")]),e._v(" "),t("p",[e._v("Use "),t("code",[e._v("rocketpool odao propose setting scrub-period <value>")]),e._v(' to change how long the "scrub period" lasts (the time between a new minipool entering '),t("code",[e._v("prelaunch")]),e._v(" status and entering "),t("code",[e._v("staking")]),e._v(" status).\nThe Oracle DAO has this long to check new minipools for the "),t("a",{attrs:{href:"https://github.com/rocket-pool/rocketpool-research/blob/master/Reports/withdrawal-creds-exploit.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("withdrawal credentials exploit"),t("OutboundLink")],1),e._v(" and scrub them if the exploit is detected, thus ensuring rETH funds are not stolen.\nThis duty is performed automatically by the "),t("code",[e._v("watchtower")]),e._v(" daemon.\nAs the check is usually done in a matter of minutes, this value is simply designed to act as an insurance buffer in the case that the Oracle DAO cannot come to consensus due to node failure; the members have this long to resolve the problem and reach the quorum on scrubbing an exploited minipool.")]),e._v(" "),t("p",[t("code",[e._v("<value>")]),e._v(" is a string-formatted time duration, such as "),t("code",[e._v("1h30m45s")]),e._v(" for one hour, thirty minutes, and forty-five seconds.\nIt does not accept days; for multiple days, simply use the total number of hours.")])]),e._v(" "),t("Tab",{attrs:{label:"Contract Upgrades"}},[t("p",[e._v("Contract upgrades are currently outside the scope of the CLI.\nThe transactions must be submitted manually; please consult the Rocket Pool team if you would like to learn how to propose a contract upgrade to the network.")])])],1),e._v(" "),t("h2",{attrs:{id:"viewing-proposals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#viewing-proposals"}},[e._v("#")]),e._v(" Viewing Proposals")]),e._v(" "),t("p",[e._v("To view a brief summary of all of the proposals in the protocol's history, use "),t("code",[e._v("rocketpool odao proposals list")]),e._v(".\nThis will sort the proposals by their status and show who proposed it and what it does.")]),e._v(" "),t("p",[e._v("To view the details of a specific proposal, use "),t("code",[e._v("rocketpool odao proposals details <value>")]),e._v(" where "),t("code",[e._v("<value>")]),e._v(" is the ID of the proposal you would like to view.\nThis will show a comprehensive breakdown of the proposal's information including who created it, when it was created, the payload body, how many members voted in favor of it, how many members voted against it, and whether or not your node has voted on it yet.")]),e._v(" "),t("h2",{attrs:{id:"voting-on-proposals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#voting-on-proposals"}},[e._v("#")]),e._v(" Voting on Proposals")]),e._v(" "),t("p",[e._v("To vote on a proposal, use the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool odao proposals vote\n")])])]),t("p",[e._v("This will provide you with an interactive dialog asking which proposal you would like to vote on, and whether you would like to vote in favor of it or against it.\nFollow the prompts carefully to complete the vote.")]),e._v(" "),t("h2",{attrs:{id:"executing-proposals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#executing-proposals"}},[e._v("#")]),e._v(" Executing Proposals")]),e._v(" "),t("p",[e._v("When a proposal has received enough votes in favor of it to reach quorum, any member of the Oracle DAO can then "),t("em",[e._v("execute")]),e._v(" the proposal (apply its changes) using the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool odao proposals execute\n")])])]),t("p",[e._v("This will provide you with an interactive dialog asking which proposal you would like to execute.\nFollow the prompts carefully to complete the execution.")])],1)}),[],!1,null,null,null);o.default=s.exports}}]);